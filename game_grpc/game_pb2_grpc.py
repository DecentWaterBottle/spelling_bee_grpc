# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from game_grpc import game_pb2 as game__pb2


class SpellingBeeGameStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendDifficulty = channel.unary_unary(
                '/SpellingBeeGame/SendDifficulty',
                request_serializer=game__pb2.Difficulty.SerializeToString,
                response_deserializer=game__pb2.Letters.FromString,
                )
        self.CheckWord = channel.unary_unary(
                '/SpellingBeeGame/CheckWord',
                request_serializer=game__pb2.Word.SerializeToString,
                response_deserializer=game__pb2.Score.FromString,
                )
        self.SendLetters = channel.unary_unary(
                '/SpellingBeeGame/SendLetters',
                request_serializer=game__pb2.Empty.SerializeToString,
                response_deserializer=game__pb2.Letters.FromString,
                )
        self.GetUserWords = channel.unary_unary(
                '/SpellingBeeGame/GetUserWords',
                request_serializer=game__pb2.Empty.SerializeToString,
                response_deserializer=game__pb2.Words.FromString,
                )
        self.GetUserScore = channel.unary_unary(
                '/SpellingBeeGame/GetUserScore',
                request_serializer=game__pb2.Empty.SerializeToString,
                response_deserializer=game__pb2.Score.FromString,
                )


class SpellingBeeGameServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendDifficulty(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckWord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendLetters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserWords(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserScore(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SpellingBeeGameServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendDifficulty': grpc.unary_unary_rpc_method_handler(
                    servicer.SendDifficulty,
                    request_deserializer=game__pb2.Difficulty.FromString,
                    response_serializer=game__pb2.Letters.SerializeToString,
            ),
            'CheckWord': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckWord,
                    request_deserializer=game__pb2.Word.FromString,
                    response_serializer=game__pb2.Score.SerializeToString,
            ),
            'SendLetters': grpc.unary_unary_rpc_method_handler(
                    servicer.SendLetters,
                    request_deserializer=game__pb2.Empty.FromString,
                    response_serializer=game__pb2.Letters.SerializeToString,
            ),
            'GetUserWords': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserWords,
                    request_deserializer=game__pb2.Empty.FromString,
                    response_serializer=game__pb2.Words.SerializeToString,
            ),
            'GetUserScore': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserScore,
                    request_deserializer=game__pb2.Empty.FromString,
                    response_serializer=game__pb2.Score.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'SpellingBeeGame', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SpellingBeeGame(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendDifficulty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SpellingBeeGame/SendDifficulty',
            game__pb2.Difficulty.SerializeToString,
            game__pb2.Letters.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckWord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SpellingBeeGame/CheckWord',
            game__pb2.Word.SerializeToString,
            game__pb2.Score.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendLetters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SpellingBeeGame/SendLetters',
            game__pb2.Empty.SerializeToString,
            game__pb2.Letters.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserWords(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SpellingBeeGame/GetUserWords',
            game__pb2.Empty.SerializeToString,
            game__pb2.Words.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserScore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SpellingBeeGame/GetUserScore',
            game__pb2.Empty.SerializeToString,
            game__pb2.Score.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
